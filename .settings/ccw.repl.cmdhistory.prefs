cmdhistory=["foo" "foo [eric]" "foo" "foo XASD" "foo \\"Eric\\"" "hangman.core.foo" "foo" "(foo \\"Eric\\")" "hangman" "foo" "hangman[]" "(hangman )" "hangman" "(play \\"palavra secreta\\")" "(play)" "play" "(play \\"palavra secreta\\")" "play" "(play \\"secret\\")" "play" "(play \\"foo\\")" "play" "(play \\"foo\\")" "(foo \\"play\\")" "(bar \\"play\\")" "(hello \\"punk\\")" "(def greeting \\"Hello\\")" "(hello \\"er\\")" "(defn hello\\r\\n  \\"I don't do a whole lot.\\"\\r\\n  [x]\\r\\n  (println greeting \\" \\" x ))" "hello \\"Eric" "hello \\"Eric\\"" "(hello \\"Eric\\")" "(defn hello\\r\\n  \\"I don't do a whole lot.\\"\\r\\n  [x]\\r\\n  (println greeting x ))" "(hello \\"Eric\\")" "words" "(hello \\"Eric\\")" "clojure.set" "(javax.swing.JOptionPane/showMessageDialog nil \\"Hello World\\")" "\\"Hello World\\"" "(hello \\"name\\")" "(hello \\"World\\")" "(hello \\"Eric\\")" "lain repl" "lein repl" "(hello \\"EU\\")" " (hello \\"EU\\")" "(counter-app)" "hangman.core \\"hi\\"" "(hangman.core \\"hi\\")" "(.length words)" "(Math.random)" "(java.lang.Math/random)" "(.length hangman.main/words)" "(hangman.main/words)" "(hangman.main/words/length)" "(.size words)" "(.size hangman.main/words)" "(hangman.main/is-end-game?)" "(hangman.core/mistakes)" "'(hangman.main/mistakes)" "(hangman.main/mistakes)" "(javax.swing.JOptionPane/showMessageDialog nil head)" "(do (require 'midje.repl) (midje.repl/autotest))" "1" "(do (require 'midje.repl) (midje.repl/autotest))" "(pst *me)" "`(pst *me)" "(do (require 'midje.repl) (midje.repl/autotest))" "`(pst *me)" "(start-game)" "(hangman.main/start-game)" "`(hangman.main/start-game)" "(hangman.main/start-game)" "`(pst *me)" "(pst *me)" "(hangman.main/start-game)" "(require 'hangman.main)" "(hangman.main/start-game)" "\#{}" "123" "\#{1 2 3}" "(conj \#{1 2 3} 4)" "(def s \#{1 2 3})" "s" "(conj s 4)" "s" "(hangman.main/start-game)" "(require 'hangman.main)" "(hangman.main/start-game)" "(require 'hangman.main)" "(hangman.main/start-game)" "(require 'hangman.main)" "(hangman.main/start-game)" "(require 'hangman.main)" "(hangman.main/start-game)" "(.toCharArray \\"string\\")" "(seq (.toCharArray \\"string\\"))" "(hangman.main/start-game)" "(hangman.main/include-hit ${} 1)" "(require 'hangman.main)" "(hangman.main/start-game)" "(require 'hangman.main)" "(hangman.main/start-game)" "(require 'hangman.main)" "(hangman.main/include-hit ${} 1)" "(hangman.main/include-hit \#{} 1)" "(hangman.main/include-hit \#{} \\"1\\")" "(hangman.main/include-hit \#{1 2 3} \\"1\\")" "(hangman.main/include-hit \#{1 2 3} 1)" "(hangman.main/include-hit \#{\\"1\\" \\"2\\" \\"3\\"} 1)" "(hangman.main/include-hit \#{\\"1\\" \\"2\\" \\"3\\"} \\"1\\")" "(hangman.main/include-hit \#{\\"1\\" \\"2\\" \\"3\\"} '1)" "(hangman.main/include-hit \#{\\"1\\" \\"2\\" \\"3\\"} '\\"1\\")" "(hangman.main/include-hit \#{\\"1\\" \\"2\\" \\"3\\"} `\\"1\\")" "(hangman.main/include-hit '\#{\\"1\\" \\"2\\" \\"3\\"} \\"1\\")" "(hangman.main/start-game)" "(require 'hangman.main)" "(hangman.main/start-game)" "(require 'hangman.main)" "(hangman.main/start-game)" "(require 'hangman.main)" "(hangman.main/obtem-set-chs \\"word\\")" "(require 'hangman.main)" "(hangman.main/obtem-set-chs \\"word\\")" "(hangman.main/start-game)"]
eclipse.preferences.version=1
